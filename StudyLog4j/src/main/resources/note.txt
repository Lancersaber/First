Log4j是Apache的一个开放源代码项目，通过使用Log4j，可以控制日志信息输送的目的地是控制台、文件、GUI组件、甚至是套接字接口服务器、
NT的事件记录器等，也可以控制每一条日志的输出格式；通过定义每一条日志信息的级别，能够更加细致地控制日志的生成过程。这些可以通过
一个配置文件灵活地进行配置，而不需要修改应用的代码


常见的Appender，前三个常用
org.apache.log4j.ConsoleAppender             控制台
org.apache.log4j.FileAppender                文件(永远只有一个文件)
org.apache.log4j.DailyRollingFileAppender    每天产生一个日志文件
org.apache.log4j.RollingFileAppender         文件大小到达指定尺寸的时候产生一个新的文件
org.apache.log4j.WriterAppender              将日志信息以流格式发送到任意指定的地方
org.apache.log4j.jdbc.JDBCAppender           把日志用JDBC记录到数据库中


常见的Layout
org.apache.log4j.HTTPLayout      以HTML表格形式布局
org.apache.log4j.PatternLayout   可以灵活地指定布局模式
org.apache.log4j.SimpleLayout    包含日志信息的级别和信息字符串
org.apache.log4j.TTCCLayout      包含日志产生的时间、线程、类别等信息

常用PatternLayout
%m 输出代码中指定的信息
%p 输出优先级，即 DEBUG,INFO,ERROR,FATAL
%r 输出自应用启动到输出该log信息耗费的毫秒数
%c 输出所属的类目，通常就是所在类的全名
%t 输出产生该日志事件的线程名
%n 输出一个回车换行符，Windows平台为"\r\n",Unix平台为"\n"
%d 输出日志时间点的日期或时间，默认格式为ISO8601,也可以在其后指定格式
    比如：%d{yyyy-MM-dd HH:mm:ss,SSS} 输出类似：2015-12-20 18:35:51,768


Appender、Layout、Logger三者之间的关系
1、每个appender后面必然需要跟随layout ，指定自己输出的风格方式
2、每个Logger都可以指定一个级别，同时引用多个appender
3、每个Appender也可以被多个Logger进行引用